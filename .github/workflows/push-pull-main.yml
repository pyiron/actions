# This runs jobs which pyiron modules should run on pushes or PRs to main
name: Push or Pull to main

on:
  workflow_call:

env:
  PYTHON_VERSION: '3.10'
  ENV_PREFIX: '/usr/share/miniconda3/envs/my-env'
  ENV_LABEL: 'linux-64-py-3-10'

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: pyiron/pyiron_github/actions/build-docs@main
        with:
          python-version: env.PYTHON_VERSION
          env-prefix: env.ENV_PREFIX
          env-label: env.ENV_LABEL

  build-notebooks:
    runs-on: ubuntu-latest
    steps:
      - uses: pyiron/pyiron_github/actions/build-notebooks@main
        with:
          python-version: env.PYTHON_VERSION
          env-prefix: env.ENV_PREFIX
          env-label: env.ENV_LABEL

  tests-coverage-coveralls-codacy:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        include:
          - operating-system: macos-latest
            python-version: env.PYTHON_VERSION
            label: osx-64-py-3-10
            prefix: /Users/runner/miniconda3/envs/my-env

          - operating-system: windows-latest
            python-version: env.PYTHON_VERSION
            label: win-64-py-3-10
            prefix: C:\Miniconda3\envs\my-env

          - operating-system: ubuntu-latest
            python-version: env.PYTHON_VERSION
            env-prefix: env.ENV_PREFIX
            env-label: env.ENV_LABEL

          - operating-system: ubuntu-latest
            python-version: 3.9
            label: linux-64-py-3-9
            prefix: /usr/share/miniconda3/envs/my-env

          - operating-system: ubuntu-latest
            python-version: 3.8
            label: linux-64-py-3-8
            prefix: /usr/share/miniconda3/envs/my-env

    steps:
    - uses: pyiron/pyiron_github/actions/unit-tests@main
      with:
        python-version: ${{ matrix.python-version }}
        env-prefix: ${{ matrix.prefix }}
        env-label: ${{ matrix.label }}
        env-files: .ci_support/environment-unittests.yml .ci_support/environment.yml
    - name: Coverage
      if: matrix.label == 'linux-64-py-3-10'
      continue-on-error: True
      shell: bash -l {0}
      run: |
        coverage combine
        coveralls --service=github
        coverage xml
    - name: Codacy
      if: matrix.label == 'linux-64-py-3-10' && github.event_name != 'push'
      continue-on-error: True
      shell: bash -l {0}
      run: |
        python-codacy-coverage -r coverage.xml

  pip-check:
    runs-on: ubuntu-latest
    steps:
      - uses: pyiron/pyiron_github/actions/pip-check@main
        with:
          python-version: env.PYTHON_VERSION
          env-prefix: env.ENV_PREFIX
          env-label: env.ENV_LABEL

  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: psf/black@stable
        with:
          options: "--check --diff"
          src: ./${{ github.event.repository.name }}