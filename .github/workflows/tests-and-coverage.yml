# This runs coveralls and codacy services for quality/coverage testing
# Recommended usage:
#   on:
#     schedule:
#       - cron: '0 23 * * *'  # Daily at 23:00 UTC, for example
# And/or:
# on:
#   pull_request:
#     types: [labeled]

name: Tests and Coverage

on:
  workflow_call:
    inputs:
      test-dir:
        type: string
        description: 'The directory containing the tests'
        default: tests
        required: false
      omit-patterns:
        type: string
        description: 'Patterns passed to --omit for skipping coverage'
        default: '*/_version.py'
        required: false
      tests-env-files:
        type: string
        description: 'Paths to an arbitrary number of (space-separated) conda environment yaml files'
        default: .ci_support/environment.yml
        required: false
      extra-python-paths:
        type: string
        description: 'Extra paths (e.g. test dirs tests/(benchmark,integration,unit)) to the PYTHONPATH. This is a required workaround for repos that use `pympipool` executors, [cf. this issue](https://github.com/pyiron/pympipool/issues/239).'
        default: ''
        required: false
      runner:
        type: string
        description: 'The main runner to use everywhere'
        default: 'ubuntu-latest'
        required: false
      python-version:
        type: string
        description: 'The version of python use'
        default: '3.12'
        required: false
      test-timeout-minutes:
        type: number
        description: 'timout-minutes to apply to running the tests'
        default: 15
        required: false
      do-coveralls:
        type: boolean
        description: 'Whether to use the coveralls/github-action after generating coverage'
        default: true
        required: false
      do-codacy:
        type: boolean
        description: 'Whether to push the report to codacy after generating coverage'
        default: true
        required: false

jobs:
  Tests-and-Coverage:
    runs-on: ${{ inputs.runner }}
    steps:
      - uses: actions/checkout@v4
      - uses: pyiron/actions/add-to-python-path@bump_python
        if: inputs.extra-python-paths != ''
        with:
          path-dirs: ${{ inputs.extra-python-paths }}
      - uses: pyiron/actions/unit-tests@bump_python
        with:
          python-version: ${{ inputs.python-version }}
          env-files: ${{ inputs.tests-env-files }}
          test-dir: ${{ inputs.test-dir }}
          omit-patterns: ${{ inputs.omit-patterns }}
        timeout-minutes: ${{ inputs.test-timeout-minutes }}
      - name: Coverage
        shell: bash -l {0}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          coverage combine
          coverage xml
      - name: Coveralls
        if: ${{ inputs.do-coveralls }}
        uses: coverallsapp/github-action@v2
      - name: Codacy
        if: ${{ inputs.do-codacy }}
        shell: bash -l {0}
        env:
          CODACY_API_TOKEN: ${{ secrets.CODACY_API_TOKEN }}
          CODACY_ORGANIZATION_PROVIDER: gh
          CODACY_USERNAME: ${{ github.repository_owner }}
          CODACY_PROJECT_NAME: ${{ github.event.repository.name }}
        run: |
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r coverage.xml
