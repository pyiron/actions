name: 'Setup cached miniforge'
description: 'Use conda environment files to build a cached (optional) python environment with miniforge, and local code with pip install'

inputs:
  python-version:
    description: 'Which version of the python interpreter to use, e.g. "3.11"'
    required: true
  env-files:
    description: 'Paths to an arbitrary number of (space-separated) conda environment yaml files'
    default: .ci_support/environment.yml
    required: false
  use-cache:
    description: 'A stringified boolean flag for whether or not to leverage environment caching'
    default: 'true'
    required: false
  cache-number:
    description: 'A stringified integer for the cache number (can be used to force-bump the cache)'
    default: '0'
    required: false
  local-code-directory:
    description: 'The location containing the code under development; targeted by pip install'
    default: '.'
    required: false
  miniforge-variant:
    description: 'conda-incubator/setup-miniconda argument'
    default: Mambaforge
    required: false
  miniforge-version:
    description: 'conda-incubator/setup-miniconda argument'
    default: latest
    required: false
  miniforge-channels:
    description: 'conda-incubator/setup-miniconda argument'
    default: conda-forge
    required: false
  miniforge-channel-priority:
    description: 'conda-incubator/setup-miniconda argument'
    default: strict
    required: false
  miniforge-activate-environment:
    description: 'conda-incubator/setup-miniconda argument'
    default: my-env
    required: false
  miniforge-use-mamba:
    description: 'conda-incubator/setup-miniconda argument'
    default: 'true'
    required: false
  picky-local-install:
    description: 'Pip-install versioneer[toml] and add --no-build-isolation to the pip install. If you get a malformed node error, try this. If you figure out why you needed it, contact @liamhuber. This was necessary for pyiron_base, and I have no idea why.'
    default: 'false'
    required: false

runs:
  using: "composite"
  steps:
  - uses: pyiron/actions/write-environment@free_python_path
    with:
      env-files: ${{ inputs.env-files }}
  - name: Setup Mambaforge
    uses: conda-incubator/setup-miniconda@v3
    with:
      python-version: ${{ inputs.python-version }}
      miniforge-variant: ${{ inputs.miniforge-variant }}
      miniforge-version: ${{ inputs.miniforge-version }}
      channels: ${{ inputs.miniforge-channels }}
      channel-priority: ${{ inputs.miniforge-channel-priority }}
      activate-environment: ${{ inputs.miniforge-activate-environment }}
      use-mamba: ${{ inputs.miniforge-use-mamba }}
  - name: Calculate cache label info
    id: cache-info
    shell: bash -l {0}
    run: |
      pyversion_string=${{ inputs.python-version }}
      pyversion_string=${pyversion_string/\./-}
      echo LABEL=${{ runner.os }}-${{ runner.arch }}-py-${pyversion_string} >> $GITHUB_OUTPUT
      echo HASH=${{ hashFiles(env.WRITE_ENVIRONMENT_OUTPUT_ENV_FILE) }} >> $GITHUB_OUTPUT
      echo "TODAY=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
  - uses: actions/cache@v4
    id: cache
    if: ${{ inputs.use-cache == 'true' }}
    env:
      CACHE_NUMBER: ${{ inputs.cache-number }}
    with:
      path: ${{ env.CONDA }}/envs
      key: ${{ steps.cache-info.outputs.LABEL }}-conda-${{ steps.cache-info.outputs.HASH }}-${{ steps.cache-info.outputs.TODAY }}-${{ env.CACHE_NUMBER }}
  - name: Update environment
    if: inputs.use-cache != 'true' || steps.cache.outputs.cache-hit != 'true'
    shell: bash -l {0}
    run: mamba env update -n ${{ inputs.miniforge-activate-environment }} -f ${{ env.WRITE_ENVIRONMENT_OUTPUT_ENV_FILE }}
  - name: Conda list
    shell: bash -l {0}
    run: conda list
  - name: Install local code
    if: inputs.picky-local-install != 'true'
    shell: bash -l {0}
    run: |
      pip install --no-deps ${{ inputs.local-code-directory }}
  - name: Install local code, but with extra stuff for picky repositories
    if: inputs.picky-local-install == 'true'
    shell: bash -l {0}
    run: |
      pip install versioneer[toml]==0.29
      pip install --no-deps ${{ inputs.local-code-directory }} --no-build-isolation